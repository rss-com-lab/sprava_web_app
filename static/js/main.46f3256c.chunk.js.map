{"version":3,"sources":["constants/constants.js","reducers/initialState.js","actions/filter.js","actions/apiFetch.js","reducers/index.js","components/checkbox/checkbox.js","api/saveEvents.js","api/replaceAll.js","components/event/event.js","components/loading/loading.js","components/requestFailed/requestFailed.js","app-config/app-config.js","components/eventList/eventList.js","containers/visibleEventList.js","components/btn/btn.js","containers/filterBtn.js","components/controlBtns/controlBtns.js","components/app/App.js","serviceWorker.js","index.js"],"names":["VisibilityFilters","ITEMS_STATUS_PARAMS","ACTION_TYPES","FETCH_DATA_INITIAL_STATE","payload","itemsStatus","items","VISIBILITY_FILTER_INITIAL_STATE","filter","setVisibilityFilter","type","reducer","state","arguments","length","undefined","action","Object","objectSpread","itemsStatusData","dataSuccess","URL_TO_FETCH_SPRAVA_DATA","concat","combineReducers","visibilityFilter","Checkbox","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCheckboxChange","event","handleCheckboxChange","setState","_ref","isChecked","isSaved","bind","assertThisInitialized","_this$props","label","id","react_default","a","createElement","className","htmlFor","value","checked","onChange","React","Component","addEvent","checkedEventsList","document","querySelectorAll","idArray","i","push","localStorage","setItem","replaceAll","string","search","replace","split","join","Event","img","title","schedule","link","isEventSave","Parser","src","alt","keys","map","eventParam","key","uniqid","point","timeStart","timeEnd","href","target","components_checkbox_checkbox","saveEvents","Loading","RequestField","FESTIVAL_DAYS","FIRST_DAY","SECOUND_DAY","EventList","fetchData","events","fetchStatus","requestFailed_requestFailed","loading_loading","style","e","date","display","eventNumber","components_event_event","Boolean","getVisibleEvents","musicAPI","localIdArray","getItem","currentEventListExperiment","entries","constructor","forEach","day","item","customItem","eventId","find","Error","connect","dispatch","url","ITEMS_HAS_ERRORED","ITEMS_FETCH_DATA_SUCCESS","window","fetch","cache","then","response","ok","console","error","status","statusText","json","catch","Btn","active","onClick","children","disabled","ownProps","ControlBtns","filterBtn","App","controlBtns_controlBtns","visibleEventList","isLocalhost","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_app_App","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.46f3256c.chunk.js","sourcesContent":["export const SPRAVA_API_MAIN_URL = 'http://spravafestival.by/api';\n\nexport const CORS_URL = 'https://cors-anywhere.herokuapp.com';\n\nexport const SPRAVA_API_URL = {\n  music: 'music',\n  perfomance: 'performances',\n  actions: 'actions',\n  questions: 'questions',\n  partners: 'partners',\n  infopartners: 'infopartners',\n};\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_SAVED: 'SHOW_SAVED',\n};\n\nexport const ITEMS_STATUS_PARAMS = {\n  ITEMS_HAS_ERRORED: 'ITEMS_HAS_ERRORED',\n  ITEMS_IS_LOADING: 'ITEMS_IS_LOADING',\n  ITEMS_FETCH_DATA_SUCCESS: 'ITEMS_FETCH_DATA_SUCCESS',\n};\n\nexport const ACTION_TYPES = {\n  SET_VISIBILITY_FILTER: 'SET_VISIBILITY_FILTER',\n  SET_ITEMS_STATUS: 'SET_ITEMS_STATUS',\n};\n","import { VisibilityFilters, ITEMS_STATUS_PARAMS } from '../constants/constants';\n\nexport const FETCH_DATA_INITIAL_STATE = {\n  payload: {\n    itemsStatus: ITEMS_STATUS_PARAMS.ITEMS_IS_LOADING,\n    items: {},\n  },\n};\n\nexport const VISIBILITY_FILTER_INITIAL_STATE = {\n  payload: {\n    filter: VisibilityFilters.SHOW_ALL,\n  },\n};\n","import { VISIBILITY_FILTER_INITIAL_STATE } from '../reducers/initialState';\nimport { ACTION_TYPES } from '../constants/constants';\n\nexport const setVisibilityFilter = filter => ({\n  type: ACTION_TYPES.SET_VISIBILITY_FILTER,\n  payload: {\n    filter,\n  },\n});\n\nexport const reducer = (state =\nVISIBILITY_FILTER_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SET_VISIBILITY_FILTER:\n      return {\n        ...state,\n        payload: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import 'whatwg-fetch';\nimport {\n  ACTION_TYPES, ITEMS_STATUS_PARAMS,\n  SPRAVA_API_MAIN_URL, CORS_URL, SPRAVA_API_URL,\n} from '../constants/constants';\nimport { FETCH_DATA_INITIAL_STATE } from '../reducers/initialState';\n\nexport const itemsStatus = (itemsStatusData, dataSuccess = {}) => ({\n  type: ACTION_TYPES.SET_ITEMS_STATUS,\n  payload: {\n    itemsStatus: itemsStatusData,\n    items: dataSuccess,\n  },\n});\n\nconst URL_TO_FETCH_SPRAVA_DATA = `${CORS_URL}/${SPRAVA_API_MAIN_URL}/${SPRAVA_API_URL.music}`;\n\nexport const itemsFetchData = () => (dispatch) => {\n  const {\n    ITEMS_HAS_ERRORED,\n    ITEMS_IS_LOADING,\n    ITEMS_FETCH_DATA_SUCCESS,\n  } = ITEMS_STATUS_PARAMS;\n  dispatch(itemsStatus(ITEMS_IS_LOADING));\n\n  window.fetch(URL_TO_FETCH_SPRAVA_DATA, { cache: 'force-cache' })\n    .then((response) => {\n      if (!response.ok) {\n        // eslint-disable-next-line no-console\n        console.error(`Oops, something went wrong with response. Error in fetch, response status: ${response.status}`);\n        throw Error(response.statusText);\n      }\n\n      return response;\n    })\n    .then(response => response.json())\n    .then((items) => {\n      dispatch(itemsStatus(ITEMS_FETCH_DATA_SUCCESS, items));\n    })\n    .catch(() => {\n      dispatch(itemsStatus(ITEMS_HAS_ERRORED));\n    });\n};\n\nconst reducer = (state = FETCH_DATA_INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.SET_ITEMS_STATUS:\n      return {\n        ...state,\n        payload: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport visibilityFilter from '../actions/filter';\nimport itemsStatus from '../actions/apiFetch';\n\nexport default combineReducers({\n  visibilityFilter,\n  itemsStatus,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './checkbox.scss';\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: props.isSaved,\n    };\n    this.toggleCheckboxChange.bind(this);\n  }\n\n  toggleCheckboxChange = (event) => {\n    const { handleCheckboxChange } = this.props;\n\n    this.setState(({ isChecked }) => (\n      {\n        isChecked: !isChecked,\n      }\n    ));\n\n    handleCheckboxChange(event);\n  }\n\n  render() {\n    const { label, id } = this.props;\n    const { isChecked } = this.state;\n    return (\n      <div className=\"checkbox__container\">\n        <label htmlFor={id} className=\"label__control option\">\n          <input\n            type=\"checkbox\"\n            className=\"check__input\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n            id={id}\n          />\n          <span className=\"check__box\" />\n        </label>\n      </div>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  handleCheckboxChange: PropTypes.func.isRequired,\n  isSaved: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","export default function addEvent() {\n  const checkedEventsList = document.querySelectorAll('input[type=checkbox]:checked');\n  const idArray = [];\n  for (let i = 0; i < checkedEventsList.length; i += 1) {\n    idArray.push(checkedEventsList[i].id);\n  }\n  localStorage.setItem('checkedEventList', idArray);\n}\n","export default function replaceAll(string, search, replace) {\n  return string.split(search).join(replace);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Parser from 'html-react-parser';\nimport uniqid from 'uniqid';\n\nimport Checkbox from '../checkbox/checkbox';\nimport saveEvents from '../../api/saveEvents';\nimport replaceAll from '../../api/replaceAll';\n\n\nimport './event.scss';\n\nconst Event = ({\n  img, title, schedule, link, isEventSave, id,\n}) => (\n  <div className=\"events-section__event-container\">\n    <h4 className=\"event-data__event-header\">\n      {Parser(title)}\n    </h4>\n    <div className=\"events-section__event-data\">\n      <div className=\"events-section__event-img\">\n        <img src={`http://spravafestival.by/${img}`} alt={`${replaceAll(title, '<br/>', ' ')} preview`} />\n      </div>\n      <div className=\"events-sevtion__schedule\">\n        {Object.keys(schedule).map(eventParam => (\n          <div className=\"events-section__event-params\" key={uniqid()}>\n            <h5 className=\"events-section__event-location\">{schedule[eventParam].point}</h5>\n            <p className=\"events-section__time\">\n              {schedule[eventParam].timeStart}\n            -\n              {schedule[eventParam].timeEnd}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n    <div className=\"event-data__group-link-container\">\n      <a\n        href={link}\n        target=\"blank\"\n        title={replaceAll(title, '<br/>', ' ')}\n        className=\"event-data__group-link\"\n      >\n      Сайт группы\n      </a>\n    </div>\n    <div className=\"events-section__event-checkbox\">\n      <Checkbox label=\"Выбрать\" isSaved={isEventSave} id={id} handleCheckboxChange={saveEvents} />\n    </div>\n  </div>\n);\n\nEvent.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  schedule: PropTypes.objectOf(PropTypes.shape({\n    point: PropTypes.string.isRequired,\n    timeStart: PropTypes.string.isRequired,\n    timeEnd: PropTypes.string.isRequired,\n  })).isRequired,\n  link: PropTypes.string.isRequired,\n  isEventSave: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Event;\n","import React from 'react';\nimport './loading.scss';\n\nconst Loading = () => (\n  <div className=\"loading__animation-elements-container\">\n    <div className=\"loading__animation-element last-element\" />\n    <div className=\"loading__animation-element central-element\" />\n    <div className=\"loading__animation-element main-element\" />\n    <div className=\"loading__animation-element central-element\" />\n    <div className=\"loading__animation-element last-element\" />\n  </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport './requestFailed.scss';\n\nconst RequestField = () => (\n  <div className=\"request-field__container\">\n    <h2 className=\"request-field__massage\">Oooops something go wrong :(</h2>\n  </div>\n);\n\nexport default RequestField;\n","const FESTIVAL_DAYS = {\n  FIRST_DAY: '4 АВГУСТА',\n  SECOUND_DAY: '5 АВГУСТА',\n};\n\nexport default FESTIVAL_DAYS;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqid from 'uniqid';\n\nimport Event from '../event/event';\nimport Loading from '../loading/loading';\nimport RequestField from '../requestFailed/requestFailed';\nimport { ITEMS_STATUS_PARAMS } from '../../constants/constants';\nimport FESTIVAL_DAYS from '../../app-config/app-config';\nimport './eventList.scss';\n\nclass EventList extends React.Component {\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData();\n  }\n\n  render() {\n    const {\n      events,\n      fetchStatus,\n    } = this.props;\n\n    switch (fetchStatus) {\n      case ITEMS_STATUS_PARAMS.ITEMS_HAS_ERRORED: // fetch failed\n        return <RequestField />;\n\n      case ITEMS_STATUS_PARAMS.ITEMS_IS_LOADING: // loading\n        return <Loading />;\n\n      default: // fetch success\n        return (\n          <div className=\"events-section__event-list-container\" id=\"event-list\">\n            <div\n              className=\"events-section__first-day-events\"\n              style={(Object.keys(events)\n                .filter(e => events[e].date === `${FESTIVAL_DAYS.FIRST_DAY}`).length > 0)\n                ? { display: 'block' } : { display: 'none' }}\n            >\n              <h5 className=\"events-section__day-title\">{FESTIVAL_DAYS.FIRST_DAY}</h5>\n              <div className=\"events-section__first-day-events-list\">\n                {(Object.keys(events)\n                  .filter(e => events[e].date === `${FESTIVAL_DAYS.FIRST_DAY}`))\n                  .map(eventNumber => (\n                    <Event\n                      key={uniqid()}\n                      img={events[eventNumber].img}\n                      title={events[eventNumber].title}\n                      schedule={events[eventNumber].schedule}\n                      link={events[eventNumber].link}\n                      id={events[eventNumber].id}\n                      isEventSave={Boolean(events[eventNumber].checked)}\n                    />\n                  ))}\n              </div>\n            </div>\n            <div\n              className=\"events-section__secound-day-events\"\n              style={(Object.keys(events)\n                .filter(e => events[e].date === `${FESTIVAL_DAYS.SECOUND_DAY}`).length > 0)\n                ? { display: 'block' } : { display: 'none' }}\n            >\n              <h5 className=\"events-section__day-title\">{FESTIVAL_DAYS.SECOUND_DAY}</h5>\n              <div className=\"events-section__secound-day-events-list\">\n                {(Object.keys(events)\n                  .filter(e => events[e].date === `${FESTIVAL_DAYS.SECOUND_DAY}`))\n                  .map(eventNumber => (\n                    <Event\n                      key={uniqid()}\n                      img={events[eventNumber].img}\n                      title={events[eventNumber].title}\n                      schedule={events[eventNumber].schedule}\n                      link={events[eventNumber].link}\n                      id={events[eventNumber].id}\n                      isEventSave={Boolean(events[eventNumber].checked)}\n                    />\n                  ))}\n              </div>\n            </div>\n          </div>\n        );\n    }\n  }\n}\n\nEventList.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n  fetchStatus: PropTypes.string.isRequired,\n  events: PropTypes.arrayOf(PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    schedule: PropTypes.objectOf(PropTypes.shape({\n      point: PropTypes.string.isRequired,\n      timeStart: PropTypes.string.isRequired,\n      timeEnd: PropTypes.string.isRequired,\n    })).isRequired,\n    link: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n\nexport default EventList;\n","import { connect } from 'react-redux';\nimport EventList from '../components/eventList/eventList';\nimport { setVisibilityFilter } from '../actions/filter';\nimport { itemsFetchData } from '../actions/apiFetch';\nimport { VisibilityFilters } from '../constants/constants';\n\nconst getVisibleEvents = (filter, items) => {\n  let musicAPI;\n  const localIdArray = (localStorage.getItem('checkedEventList'))\n    ? localStorage.getItem('checkedEventList').split(',')\n    : [];\n  const currentEventListExperiment = [];\n\n  if (!(Object.entries(items).length === 0 && items.constructor === Object)) {\n    musicAPI = { ...items };\n    Object.keys(musicAPI).forEach((day) => { // if haven't saved upload clean list\n      Object.keys(musicAPI[day].items).forEach((item) => {\n        const customItem = { ...musicAPI[day].items[item] };\n        customItem.date = musicAPI[day].date;\n        customItem.id = `${item}/date-${(customItem.date).split('')[0]}`;\n        customItem.checked = false;\n        currentEventListExperiment.push(customItem);\n      });\n    });\n    if (localIdArray.length > 0\n      && currentEventListExperiment.length > 0) { // to checked saved events but to initial state\n      localIdArray.forEach((eventId) => {\n        const currentEvent = currentEventListExperiment // deep copy !!!\n          .find(event => event.id === eventId);\n        currentEvent.checked = true;\n      });\n    }\n  }\n\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n    {\n      return currentEventListExperiment;\n    }\n    case VisibilityFilters.SHOW_SAVED:\n    {\n      return currentEventListExperiment.filter(event => event.checked === true);\n    }\n    default:\n      throw new Error(`Unknown filter: ${filter}`);\n  }\n};\n\nconst mapStateToProps = state => ({\n  events: getVisibleEvents(state.visibilityFilter.payload.filter,\n    state.itemsStatus.payload.items),\n  items: state.itemsStatus.payload.items,\n  fetchStatus: state.itemsStatus.payload.itemsStatus,\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n  setVisibilityFilter: filter => dispatch(setVisibilityFilter(filter)),\n  fetchData: url => dispatch(itemsFetchData(url)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EventList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './btn.scss';\n\nconst Btn = ({ active, onClick, children }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    disabled={active}\n    className=\"controlBtns__switcher-btn\"\n  >\n    {children}\n  </button>\n);\n\nBtn.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Btn;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions/filter';\nimport Btn from '../components/btn/btn';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter.payload.filter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Btn);\n","import React from 'react';\nimport FilterBtns from '../../containers/filterBtn';\nimport { VisibilityFilters } from '../../constants/constants';\nimport './controlBtns.scss';\n\nconst ControlBtns = () => (\n  <div className=\"event-section__controlBtns\">\n    <FilterBtns filter={VisibilityFilters.SHOW_ALL}>All</FilterBtns>\n    <FilterBtns filter={VisibilityFilters.SHOW_SAVED}>Saved</FilterBtns>\n  </div>\n);\n\nexport default ControlBtns;\n","import React from 'react';\nimport VisibleEventsList from '../../containers/visibleEventList';\nimport ControlBtns from '../controlBtns/controlBtns';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <ControlBtns />\n    <VisibleEventsList />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport App from './components/app/App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './styleReset.css';\nimport './index.css';\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}