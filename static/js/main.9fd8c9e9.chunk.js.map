{"version":3,"sources":["actions/index.js","reducers/visibilityFilters.js","components/checkbox/checkbox.js","api/saveEvents.js","components/event/event.js","components/eventList/eventList.js","containers/visibleEventList.js","components/btn/btn.js","containers/filterBtn.js","components/controlBtns/controlBtns.js","components/app/App.js","serviceWorker.js","index.js"],"names":["setVisibilityFilter","filter","type","VisibilityFilters","visibilityFilter","state","arguments","length","undefined","action","Checkbox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCheckboxChange","event","handleCheckboxChange","setState","_ref","isChecked","isSaved","bind","assertThisInitialized","_this$props","label","id","react_default","a","createElement","className","htmlFor","value","checked","onChange","React","Component","addEvent","checkedEventsList","document","querySelectorAll","idArray","i","push","replace","localStorage","setItem","Event","eventName","location","time","description","checkboxHidden","components_checkbox_checkbox","saveEvents","cn","concat","EventList","events","map","e","components_event_event","key","Boolean","disable","getVisibleEvents","localIdArray","getItem","split","elem","parseInt","currentEventList","forEach","eventId","currentEvent","eventsData","find","sort","nextEvent","savedEventsList","Error","connect","dispatch","Btn","onClick","children","ownProps","content","ControlBtns","filterBtn","App","controlBtns_controlBtns","visibleEventList","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","visibilityFilters","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_app_App","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9fd8c9e9.chunk.js","sourcesContent":["export const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter,\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_SAVED: 'SHOW_SAVED',\n};\n","import { VisibilityFilters } from '../actions';\n\nconst visibilityFilter = (state = { visibilityFilter: VisibilityFilters.SHOW_ALL }, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return { visibilityFilter: action.filter };\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './checkbox.scss';\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: props.isSaved,\n    };\n    this.toggleCheckboxChange.bind(this);\n  }\n\n  toggleCheckboxChange = (event) => {\n    const { handleCheckboxChange } = this.props;\n\n    this.setState(({ isChecked }) => (\n      {\n        isChecked: !isChecked,\n      }\n    ));\n\n    handleCheckboxChange(event);\n  }\n\n  render() {\n    const { label, id } = this.props;\n    const { isChecked } = this.state;\n    return (\n      <div className=\"checkbox__container\">\n        <label htmlFor={id} className=\"label__control\">\n          <input\n            type=\"checkbox\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n            id={id}\n          />\n          {label}\n        </label>\n      </div>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  handleCheckboxChange: PropTypes.func.isRequired,\n  isSaved: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","export default function addEvent() {\n  const checkedEventsList = document.querySelectorAll('input[type=checkbox]:checked');\n  const idArray = [];\n  for (let i = 0; i < checkedEventsList.length; i += 1) {\n    idArray.push(checkedEventsList[i].id.replace(/\\D+/g, ''));\n  }\n  localStorage.setItem('checkedEventList', idArray);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport Checkbox from '../checkbox/checkbox';\nimport saveEvents from '../../api/saveEvents';\n\nimport './event.scss';\n\nconst Event = ({\n  id, eventName, location, time, description, checkboxHidden,\n}) => (\n  <div className=\"events-section__event-container\" id={id}>\n    <div className=\"events-section__event-data\">\n      <h4 className=\"event-data__event-header\">{eventName}</h4>\n      <div className=\"event-data__time-location\">\n        <div className=\"event-data__event-location\">\n          {location}\n        </div>\n        <span className=\"event-data__event-time\">\n          {time}\n        </span>\n      </div>\n      <p className=\"event-data__event-descr\">\n        {description}\n      </p>\n    </div>\n    <div className=\"events-section__event-checkbox\">\n      <Checkbox label=\"Выбрать\" isSaved={checkboxHidden} handleCheckboxChange={saveEvents} id={cn(`choose-event-${id}`)} />\n    </div>\n  </div>\n);\n\nEvent.propTypes = {\n  id: PropTypes.number.isRequired,\n  eventName: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  time: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  checkboxHidden: PropTypes.bool.isRequired,\n};\n\nexport default Event;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Event from '../event/event';\n\nimport './eventList.scss';\n\nconst EventList = ({ events }) => (\n  <div className=\"events-section__event-list\">\n    {events.map(e => (\n      <Event\n        key={e.id}\n        id={e.id}\n        eventName={e.eventName}\n        location={e.location}\n        time={e.time}\n        description={e.description}\n        checkboxHidden={Boolean(e.disable)}\n      />\n    ))}\n  </div>\n);\n\nEventList.propTypes = {\n  events: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    eventName: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    time: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n\n\nexport default EventList;\n","import { connect } from 'react-redux';\nimport EventList from '../components/eventList/eventList';\nimport { VisibilityFilters, setVisibilityFilter } from '../actions/index';\nimport eventsData from '../eventsData/eventsData';\n\nconst getVisibleEvents = (filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n    {\n      const localIdArray = (localStorage.getItem('checkedEventList'))\n        ? localStorage.getItem('checkedEventList').split(',').map(elem => parseInt(elem, 10))\n        : [];\n      const currentEventList = [];\n      if (localIdArray.length > 0) {\n        localIdArray.forEach((eventId) => {\n          const currentEvent = eventsData.find(event => event.id === eventId);\n          currentEvent.disable = true;\n          currentEventList.push(currentEvent);\n        });\n        eventsData.forEach((event) => {\n          if (!currentEventList.find(e => e.id === event.id)) {\n            const currentEvent = event;\n            currentEvent.disable = false;\n            currentEventList.push(currentEvent);\n          }\n        });\n        currentEventList.sort((event, nextEvent) => event.id - nextEvent.id);\n      }\n      return currentEventList;\n    }\n    case VisibilityFilters.SHOW_SAVED:\n    {\n      const localIdArray = (localStorage.getItem('checkedEventList'))\n        ? localStorage.getItem('checkedEventList').split(',').map(elem => parseInt(elem, 10))\n        : [];\n      const savedEventsList = [];\n      localIdArray.forEach((elem) => {\n        const currentEvent = eventsData.find(event => event.id === elem);\n        currentEvent.disable = true;\n        savedEventsList.push(currentEvent);\n      });\n      return savedEventsList;\n    }\n    default:\n      throw new Error(`Unknown filter: ${filter}`);\n  }\n};\n\nconst mapStateToProps = state => ({\n  events: getVisibleEvents(state.visibilityFilter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setVisibilityFilter: filter => dispatch(setVisibilityFilter(filter)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EventList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './btn.scss';\n\nconst Btn = ({ onClick, children }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {children}\n  </button>\n);\n\nBtn.propTypes = {\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Btn;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Btn from '../components/btn/btn';\n\nconst mapStateToProps = (state, ownProps) => ({\n  content: ownProps.filter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Btn);\n","import React from 'react';\nimport FilterBtns from '../../containers/filterBtn';\nimport { VisibilityFilters } from '../../actions';\nimport './controlBtns.scss';\n\nconst ControlBtns = () => (\n  <div className=\"event-section__controlBtns\">\n    <FilterBtns filter={VisibilityFilters.SHOW_ALL}>All</FilterBtns>\n    <FilterBtns filter={VisibilityFilters.SHOW_SAVED}>Saved</FilterBtns>\n  </div>\n);\n\nexport default ControlBtns;\n","import React from 'react';\nimport VisibleEventsList from '../../containers/visibleEventList';\nimport ControlBtns from '../controlBtns/controlBtns';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <ControlBtns />\n    <VisibleEventsList />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport visibilityFilters from './reducers/visibilityFilters';\nimport App from './components/app/App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './styleReset.css';\nimport './index.css';\n\nconst store = createStore(\n  visibilityFilters,\n  // eslint-disable-next-line no-underscore-dangle\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}