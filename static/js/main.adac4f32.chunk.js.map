{"version":3,"sources":["actions/index.js","reducers/visibilityFilters.js","reducers/index.js","reducers/items.js","components/checkbox/checkbox.js","api/saveEvents.js","components/event/event.js","components/loading/loading.js","components/eventList/eventList.js","containers/visibleEventList.js","components/btn/btn.js","containers/filterBtn.js","components/controlBtns/controlBtns.js","components/app/App.js","serviceWorker.js","index.js"],"names":["setVisibilityFilter","filter","type","VisibilityFilters","itemsIsLoading","bool","isLoading","initialState","visibilityFilter","state","arguments","length","undefined","action","Object","objectSpread","combineReducers","items","itemsHasErrored","hasErrored","Checkbox","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleCheckboxChange","event","handleCheckboxChange","setState","_ref","isChecked","isSaved","bind","assertThisInitialized","_this$props","label","id","react_default","a","createElement","className","htmlFor","value","checked","onChange","React","Component","addEvent","checkedEventsList","document","querySelectorAll","idArray","i","push","localStorage","setItem","Event","img","title","schedule","link","isEventSave","Parser","src","alt","concat","keys","map","eventParam","point","timeStart","timeEnd","href","components_checkbox_checkbox","saveEvents","Loading","EventList","fetchData","mode","events","loading_loading","e","date","eventNumber","components_event_event","key","match","Boolean","getVisibleEvents","musicAPI","localIdArray","getItem","split","currentEventListExperiment","entries","constructor","forEach","day","item","customItem","eventId","find","Error","connect","dispatch","url","fetch","then","response","ok","statusText","json","itemsFetchDataSuccess","catch","itemsFetchData","Btn","active","onClick","children","disabled","ownProps","ControlBtns","filterBtn","App","controlBtns_controlBtns","visibleEventList","isLocalhost","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","react_redux_es","components_app_App","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.adac4f32.chunk.js","sourcesContent":["import fetch from 'cross-fetch';\n\nexport const setVisibilityFilter = filter => ({\n  type: 'SET_VISIBILITY_FILTER',\n  filter,\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_SAVED: 'SHOW_SAVED',\n};\n\n// action creators\n\nexport function itemsHasErrored(bool) {\n  return {\n    type: 'ITEMS_HAS_ERRORED',\n    hasErrored: bool,\n  };\n}\n\nexport function itemsIsLoading(bool) {\n  return {\n    type: 'ITEMS_IS_LOADING',\n    isLoading: bool,\n  };\n}\n\nexport function itemsFetchDataSuccess(items) {\n  return {\n    type: 'ITEMS_FETCH_DATA_SUCCESS',\n    items,\n  };\n}\n\nexport function itemsFetchData(url) {\n  return (dispatch) => {\n    dispatch(itemsIsLoading(true));\n\n    fetch(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n\n        dispatch(itemsIsLoading(false));\n\n        return response;\n      })\n      .then(response => response.json())\n      .then(items => dispatch(itemsFetchDataSuccess(items)))\n      .catch(() => dispatch(itemsHasErrored(true)));\n  };\n}\n","import { VisibilityFilters } from '../actions/index';\n\nconst initialState = {\n  filter: VisibilityFilters.SHOW_ALL,\n};\n\nconst visibilityFilter = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return {\n        ...state,\n        filter: action.filter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default visibilityFilter;\n","import { combineReducers } from 'redux';\nimport visibilityFilter from './visibilityFilters';\nimport { items, itemsHasErrored, itemsIsLoading } from './items';\n\nexport default combineReducers({\n  visibilityFilter,\n  items,\n  itemsHasErrored,\n  itemsIsLoading,\n});\n","export function itemsHasErrored(state = false, action) {\n  switch (action.type) {\n    case 'ITEMS_HAS_ERRORED':\n      return action.hasErrored;\n\n    default:\n      return state;\n  }\n}\n\nexport function itemsIsLoading(state = false, action) {\n  switch (action.type) {\n    case 'ITEMS_IS_LOADING':\n      return action.isLoading;\n\n    default:\n      return state;\n  }\n}\n\nexport function items(state = {}, action) {\n  switch (action.type) {\n    case 'ITEMS_FETCH_DATA_SUCCESS':\n      return action.items;\n\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './checkbox.scss';\n\nclass Checkbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isChecked: props.isSaved,\n    };\n    this.toggleCheckboxChange.bind(this);\n  }\n\n  toggleCheckboxChange = (event) => {\n    const { handleCheckboxChange } = this.props;\n\n    this.setState(({ isChecked }) => (\n      {\n        isChecked: !isChecked,\n      }\n    ));\n\n    handleCheckboxChange(event);\n  }\n\n  render() {\n    const { label, id } = this.props;\n    const { isChecked } = this.state;\n    return (\n      <div className=\"checkbox__container\">\n        <label htmlFor={id} className=\"label__control option\">\n          <input\n            type=\"checkbox\"\n            className=\"check__input\"\n            value={label}\n            checked={isChecked}\n            onChange={this.toggleCheckboxChange}\n            id={id}\n          />\n          <span className=\"check__box\" />\n        </label>\n      </div>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  handleCheckboxChange: PropTypes.func.isRequired,\n  isSaved: PropTypes.bool.isRequired,\n};\n\nexport default Checkbox;\n","export default function addEvent() {\n  const checkedEventsList = document.querySelectorAll('input[type=checkbox]:checked');\n  const idArray = [];\n  for (let i = 0; i < checkedEventsList.length; i += 1) {\n    idArray.push(checkedEventsList[i].id);\n  }\n  localStorage.setItem('checkedEventList', idArray);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Parser from 'html-react-parser';\nimport Checkbox from '../checkbox/checkbox';\nimport saveEvents from '../../api/saveEvents';\n\nimport './event.scss';\n\nconst Event = ({\n  img, title, schedule, link, isEventSave, id,\n}) => (\n  <div className=\"events-section__event-container\">\n    <h4 className=\"event-data__event-header\">\n      {Parser(title)}\n    </h4>\n    <div className=\"events-section__event-data\">\n      <div className=\"events-section__event-img\">\n        {/* <img src={img} alt={`${title} preview`} /> */}\n        <img src=\"http://www.troitsa.net/templates/rhuk_solarflare_ii/new_Footer_2017_1.jpg\" alt={`${title} preview`} />\n      </div>\n      <div className=\"events-sevtion__schedule\">\n        {Object.keys(schedule).map(eventParam => (\n          <div className=\"events-section__event-params\">\n            <h5 className=\"events-section__event-location\">{schedule[eventParam].point}</h5>\n            <p className=\"events-section__time\">\n              {schedule[eventParam].timeStart}\n            -\n              {schedule[eventParam].timeEnd}\n            </p>\n          </div>\n        ))}\n      </div>\n    </div>\n    <div className=\"event-data__group-link-container\">\n      <a href={link} className=\"event-data__group-link\">Сайт группы</a>\n    </div>\n    <div className=\"events-section__event-checkbox\">\n      <Checkbox label=\"Выбрать\" isSaved={isEventSave} id={id} handleCheckboxChange={saveEvents} />\n    </div>\n  </div>\n);\n\nEvent.propTypes = {\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  schedule: PropTypes.objectOf(PropTypes.shape({\n    point: PropTypes.string.isRequired,\n    timeStart: PropTypes.string.isRequired,\n    timeEnd: PropTypes.string.isRequired,\n  })).isRequired,\n  link: PropTypes.string.isRequired,\n  isEventSave: PropTypes.bool.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default Event;\n","import React from 'react';\nimport './loading.scss';\n\nconst Loading = () => (\n  <div className=\"loading__animation-elements-container\">\n    <div className=\"loading__animation-element last-element\" />\n    <div className=\"loading__animation-element central-element\" />\n    <div className=\"loading__animation-element main-element\" />\n    <div className=\"loading__animation-element central-element\" />\n    <div className=\"loading__animation-element last-element\" />\n  </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Event from '../event/event';\nimport Loading from '../loading/loading';\n\nimport './eventList.scss';\n\nclass EventList extends React.Component {\n  componentDidMount() {\n    const { fetchData } = this.props;\n    fetchData('https://cors-anywhere.herokuapp.com/http://spravafestival.by/api/music', { mode: 'cors' });\n  }\n\n  render() {\n    const {\n      events,\n      hasErrored,\n      isLoading,\n    } = this.props;\n    if (hasErrored) {\n      return <p>Sorry! There was an error loading the items</p>;\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    return (\n      <div className=\"events-section__event-list-container\" id=\"event-list\">\n        <div className=\"events-section__first-day-events\">\n          <h5>4 АВГУСТА</h5>\n          <div className=\"events-section__first-day-events-list\">\n            {(Object.keys(events)\n              .filter(e => events[e].date === '4 АВГУСТА'))\n              .map(eventNumber => (\n                <Event\n                  key={events[eventNumber].id.match(/^\\d+/)[0]\n                + events[eventNumber].id.match(/\\d+$/)[0]}\n                  img={events[eventNumber].img}\n                  title={events[eventNumber].title}\n                  schedule={events[eventNumber].schedule}\n                  link={events[eventNumber].link}\n                  id={events[eventNumber].id}\n                  isEventSave={Boolean(events[eventNumber].checked)}\n                />\n              ))}\n          </div>\n        </div>\n        <div className=\"events-section__secound-day-events\">\n          <h5>5 АВГУСТА</h5>\n          <div className=\"events-section__secound-day-events-list\">\n            {(Object.keys(events)\n              .filter(e => events[e].date === '5 АВГУСТА'))\n              .map(eventNumber => (\n                <Event\n                  key={events[eventNumber].id.match(/^\\d+/)[0]\n              + events[eventNumber].id.match(/\\d+$/)[0]}\n                  img={events[eventNumber].img}\n                  title={events[eventNumber].title}\n                  schedule={events[eventNumber].schedule}\n                  link={events[eventNumber].link}\n                  id={events[eventNumber].id}\n                  isEventSave={Boolean(events[eventNumber].checked)}\n                />\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEventList.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n  hasErrored: PropTypes.bool.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  events: PropTypes.arrayOf(PropTypes.shape({\n    img: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    schedule: PropTypes.objectOf(PropTypes.shape({\n      point: PropTypes.string.isRequired,\n      timeStart: PropTypes.string.isRequired,\n      timeEnd: PropTypes.string.isRequired,\n    })).isRequired,\n    link: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n};\n\nexport default EventList;\n","import { connect } from 'react-redux';\nimport EventList from '../components/eventList/eventList';\nimport { VisibilityFilters, setVisibilityFilter, itemsFetchData } from '../actions/index';\n\nconst getVisibleEvents = (filter, items) => {\n  let musicAPI;\n  const localIdArray = (localStorage.getItem('checkedEventList'))\n    ? localStorage.getItem('checkedEventList').split(',')\n    : [];\n  const currentEventListExperiment = [];\n\n  if (!(Object.entries(items).length === 0 && items.constructor === Object)) {\n    musicAPI = { ...items };\n    Object.keys(musicAPI).forEach((day) => { // if haven't saved upload clean list\n      Object.keys(musicAPI[day].items).forEach((item) => {\n        const customItem = { ...musicAPI[day].items[item] };\n        customItem.date = musicAPI[day].date;\n        customItem.id = `${item}/date-${(customItem.date).split('')[0]}`;\n        customItem.checked = false;\n        currentEventListExperiment.push(customItem);\n      });\n    });\n    if (localIdArray.length > 0\n      && currentEventListExperiment.length > 0) { // to checked saved events but to initial state\n      localIdArray.forEach((eventId) => {\n        const currentEvent = currentEventListExperiment // deep copy !!!\n          .find(event => event.id === eventId);\n        currentEvent.checked = true;\n      });\n    }\n  }\n\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n    {\n      return currentEventListExperiment;\n    }\n    case VisibilityFilters.SHOW_SAVED:\n    {\n      return currentEventListExperiment.filter(event => event.checked === true);\n    }\n    default:\n      throw new Error(`Unknown filter: ${filter}`);\n  }\n};\n\nconst mapStateToProps = state => ({\n  events: getVisibleEvents(state.visibilityFilter.filter, state.items),\n  items: state.items,\n  hasErrored: state.itemsHasErrored,\n  isLoading: state.itemsIsLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setVisibilityFilter: filter => dispatch(setVisibilityFilter(filter)),\n  fetchData: url => dispatch(itemsFetchData(url)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EventList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './btn.scss';\n\nconst Btn = ({ active, onClick, children }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n    disabled={active}\n    className=\"controlBtns__switcher-btn\"\n  >\n    {children}\n  </button>\n);\n\nBtn.propTypes = {\n  active: PropTypes.bool.isRequired,\n  children: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Btn;\n","import { connect } from 'react-redux';\nimport { setVisibilityFilter } from '../actions';\nimport Btn from '../components/btn/btn';\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter.filter,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Btn);\n","import React from 'react';\nimport FilterBtns from '../../containers/filterBtn';\nimport { VisibilityFilters } from '../../actions';\nimport './controlBtns.scss';\n\nconst ControlBtns = () => (\n  <div className=\"event-section__controlBtns\">\n    <FilterBtns filter={VisibilityFilters.SHOW_ALL}>All</FilterBtns>\n    <FilterBtns filter={VisibilityFilters.SHOW_SAVED}>Saved</FilterBtns>\n  </div>\n);\n\nexport default ControlBtns;\n","import React from 'react';\nimport VisibleEventsList from '../../containers/visibleEventList';\nimport ControlBtns from '../controlBtns/controlBtns';\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <ControlBtns />\n    <VisibleEventsList />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducers/index';\nimport App from './components/app/App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './styleReset.css';\nimport './index.css';\n\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n\n\nserviceWorker.register();\n"],"sourceRoot":""}